using Microsoft.AspNetCore.Mvc; using Microsoft.EntityFrameworkCore; using MarketplaceAPI.Data; using MarketplaceAPI.DTOs.Product; namespace MarketplaceAPI.Controllers; [ApiController][Route("api/v1/catalog")] public class CatalogController:ControllerBase{ private readonly AppDbContext _db; public CatalogController(AppDbContext db){_db=db;} [HttpGet("products")] public async Task<ActionResult<object>> Products(System.Guid? companyId, decimal? minPrice, decimal? maxPrice, int page=1, int pageSize=20){ var q=_db.Products.AsQueryable(); if(companyId.HasValue) q=q.Where(p=>p.CompanyId==companyId); if(minPrice.HasValue) q=q.Where(p=>p.Price>=minPrice); if(maxPrice.HasValue) q=q.Where(p=>p.Price<=maxPrice); var total=await q.CountAsync(); var items=await q.OrderBy(p=>p.Price).Skip((page-1)*pageSize).Take(pageSize).Select(p=>new ProductDto(p.Id,p.CompanyId,p.Name,p.Description,p.Price,p.Stock)).ToListAsync(); return Ok(new{items,page,pageSize,total}); } }